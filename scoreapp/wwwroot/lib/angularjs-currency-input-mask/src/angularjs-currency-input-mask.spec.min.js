/**
 * Minified by jsDelivr using Terser v5.7.1.
 * Original file: /npm/angularjs-currency-input-mask@1.1.2/src/angularjs-currency-input-mask.spec.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("Formatting numbers",(function(){var t,e,n;beforeEach(module("cur.$mask")),beforeEach(inject((function(r,i,c){t=r,e=i,n=c}))),describe("Testing directive",(function(){it("typing 1 with standard config and hard-coded $ should return $0.01",(function(){var n=t('<input type="text" ng-model="currency" mask-currency="\'$\'" />')(e);e.$digest(),n.val("1").triggerHandler("input"),expect(n.val()).toEqual("$0.01")})),it("typing 123456 with standard config without setting currency should return $1,234.56",(function(){var n=t('<input type="text" ng-model="currency" mask-currency />')(e);e.$digest(),n.val("123456").triggerHandler("input"),expect(n.val()).toEqual("$1,234.56")})),it("typing 123456 with standard config and empty currency should return 1,234.56",(function(){var n=t('<input type="text" ng-model="currency" mask-currency="\'\'" />')(e);e.$digest(),n.val("123456").triggerHandler("input"),expect(n.val()).toEqual("1,234.56")})),it("typing 1 and erase it with indentation and hard-coded $ should return $ 0.00",(function(){var n=t('<input type="text" ng-model="currency" mask-currency="\'$\'" config="{indentation:\' \'}" />')(e);e.$digest(),n.val("1").triggerHandler("input"),n.val(n.val().slice(0,-1)).triggerHandler("input"),expect(n.val()).toEqual("$ 0.00")})),it("typing 1 and erase it twice with indentation and hard-coded $ should return empty",(function(){var n=t('<input type="text" ng-model="currency" mask-currency="\'$\'" config="{indentation:\' \'}" />')(e);e.$digest(),n.val("1").triggerHandler("input");var r=n.val().slice(0,-1);n.val(r).triggerHandler("input"),n.val(r).triggerHandler("input"),expect(n.val()).toEqual("")})),it("typing 1 with 8 zeros using BRL config should return 1.000.000,00",(function(){var n=t("<input type=\"text\" ng-model=\"currency\" mask-currency=\"'R$'\" config=\"{indentation: ' ', group:'.' ,decimal:','}\" />")(e);e.$digest(),n.val("100000000").triggerHandler("input"),expect(n.val()).toEqual("R$ 1.000.000,00")})),it("typing random number using BRL config and then update ng-model to 100 should return R$ 100,00",(function(){var n=t("<input type=\"text\" ng-model=\"currency\" mask-currency=\"'R$'\" config=\"{indentation: ' ', group:'.' ,decimal:','}\" />")(e);e.$digest(),n.val("100000000").triggerHandler("input"),e.currency=100,e.$digest(),expect(n.val()).toBe("R$ 100,00")})),it("setting up 12.34 on scope with custom config should return 12.34 p.",(function(){e.currency=12.34;var n=t('<input type="text" ng-model="currency" mask-currency="\'p.\'" config="{orientation:\'r\',indentation:\' \'}" />')(e);e.$digest(),expect(n.val()).toBe("12.34 p.")}))})),describe("Testing filter",(function(){it("filter applied to 5000 should return format in YEN",(function(){var t=n("printCurrency")(5e3,"짜",{decimalSize:0});expect(t).toBe("짜5,000")})),it("filter applied to 5000 should return format in YEN with no group",(function(){var t=n("printCurrency")(55e5,"짜",{decimalSize:0,group:""});expect(t).toBe("짜5500000")})),it("comparing value with currency filter should show the same result",(function(){var t=5000.556;expect(n("currency")(t,"$",2)).toBe(n("printCurrency")(t,"$",{decimalSize:2}))}))}))}));
//# sourceMappingURL=/sm/8b5d85e9ae92e2efe1f2be5cf4a455f3bbc669581e323990aef30eb93101c669.map