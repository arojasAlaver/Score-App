// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scoreapp.data;

namespace scoreapp.data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211118173155_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("scoreapp.model.database.pivots.ApplicationGroup", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ApplicationGroup");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.PermissionRole", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRole");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("3d30dcd5-6caa-4c3f-927e-9b74ec3dbd1b"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("a86c6d87-6cfe-4b61-ac8a-2e494cad6e62"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("10894c85-8e6f-4bf6-b57b-c9c26a88282c"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("d7120b1a-3638-4816-b3bc-8939f121362d"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("58ec21de-f92e-4f5f-ae1b-ee2d3dd06b09"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("05e6c31a-21cc-43c5-97e5-3cfbe3ceacd6"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("8f99ec0b-0f93-46fb-9ed2-08c3085ec8f2"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("d0749ed5-ff63-4a62-b7ac-3fb44fb9bf5c"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("979da608-7b3f-4d9c-81ef-54f748e7fd21"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("0099af76-2702-4049-af18-faf8562335f2"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("1ded4347-b7ea-4851-8656-7f052f12552f"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("0d715657-5ae3-408a-829c-dfc61ce36d93"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("6ec758a1-3fd4-4200-aee0-c1e8853db644"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("02b23fb6-06c2-4ca9-8a3a-a47acc4f8f3c"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("96a1f3fc-1a48-4918-898c-a24a1e7b0c5c"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("63fcfdbd-418e-43eb-95b3-8803eaccb24f"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("0cbb8256-0147-4b4f-8240-4505ef3ce2e4"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("bcc3c0c5-d524-428d-867f-5b7e909840e6"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("150b5467-09f9-474c-b7ce-e179d91458e5"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("ecfea994-c649-478c-b4b0-72465b6b3910"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("4c2f1041-4f18-41e8-978a-789d23d857df"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("8344a1e9-8c82-4bc0-b0cb-4549c06b3ee3"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("3daf11fc-3c5c-4a81-af64-ec05338c731b"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        },
                        new
                        {
                            PermissionId = new Guid("0fa779b6-694a-40ae-b1be-20101b686ad0"),
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616")
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptCondition")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AproveAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExecutiveAssignedId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Incomes")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Office")
                        .HasColumnType("int");

                    b.Property<int?>("OfficialAssignToId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OtherIncomes")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Terms")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveAssignedId");

                    b.HasIndex("OfficialAssignToId");

                    b.HasIndex("PersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("tbl_Applications");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KeyValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Audits");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.CarInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vehicle_State")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_Vehicles");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("372af82f-a3e7-4dc8-bdd7-9df08e5f3d7f"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6J_K7xw7Y_KPBlla5PeT-yiFie9DonqOyDeknHyciGWMgh7lReb4mBiGF7Guq3FXr865TawtP65CEO2jK0o5vd8jE7vBSaasCIL0k2zmjmOPw",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LjSV8Q6fVCZxKtJSHAdJJpLVuVD8YtDl8Oum3jAW5_QG-Ki7KlQWxMCdNECNiitk2HmvVKzdXwsyilVXoeNzQl-JaXx-Pd0WMPXAYJAJioUw"
                        },
                        new
                        {
                            Id = new Guid("4fdef907-1bf6-4c72-890b-9e24c098be4c"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Lo8uloRGygR129GFbUGCwielTrEwDghDmHjcjdaKXOfSNURqYDkQlS5ObUzi7UNmog-E90TKT8RhvwbBG4eTcWywuLNsX7HhdxWh35UHQ7gw",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KcSzHrNa5Lk7qiHvJ9JjVfu4UpT8XN1OJYTX-NbEd92SCLaMVuag25Aks2SHOm-FgjpmBmBOXI9l8EQhuVIEYDLBD1N7qcsGr--cb25ggIUw"
                        },
                        new
                        {
                            Id = new Guid("1c223078-66b9-46a6-b929-41b54235d19a"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LRxr02zFuu-FEiKqXnKaCNsEFBcE-0F_38AbyBNkNYNZEQWWMM7kUeBGOF7wM5_b7V8kqoZ5_N2UG9U4EkxV8lRzrcUvQUN6W70vNzpv8CPw",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KP3IDADvGulc7mWI1F26UP7tdZ7oKL7F9o4ZmKTJRFH5uVYGhnfC6PoQ5awsSfOjd6RjUemq-7vkSwlluO76cm3abwW7MGi6C3BCTcRV2ZvvbF3_ECK1VEc_pZCzURAO6rb4lUylxMi3VXWz08mZ32"
                        },
                        new
                        {
                            Id = new Guid("adbe2283-ccff-4fbf-96a6-da4c6ab3829c"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6L9QN3MAdjye2Cm2Rzekkamm3ci8gfJUC3ATR2OiNs0dhZxwPu7SnJRNEFgvdkrdrNRPtwfg9aNDleakf2uw-DwRZO3Lg4o6z4JcCREFmhcpA",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6L8zHSWp7y5xA7RK47F7_1HAx2pSjQWbqLbjfLtZXN8671UQ4dE56HHg0OUpa4Iygw6rllj2tSPmAq4RePEexP2i_CoxgOsFN-OY7riCBqs6h7jb__72npPIIAFZaBTGG4"
                        },
                        new
                        {
                            Id = new Guid("1967261a-b8eb-4c9a-b32f-2adb68438996"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KKZU_tPIbnzk9kUncbjDm_y3kts1rucn6cBdfvz_0Ed-AtivrDDAxUizu1zJfY8PO6DKlYktzzeWterAOjxzg-tNI90YoY87q9L_8zjixhbw",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JVL7_1yp4fgG96zHZ-LukFt-LcSEigm83QEBZHYtyc6rYFHpp-4cBzH8QBjvZDr233VUhuMhaNP5EqHrpkhz-aRZ5HAu9Z1-SFyMciBIzqoQ"
                        },
                        new
                        {
                            Id = new Guid("3df2145f-db63-4696-ae3f-8c3e4627c0da"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IcYVuxvG3A24kLiDwyC9d13zJmG2Lwjfghhsx8jHh_qhJUxfD9G_2GGauB2u_jk_-g2WsbsHcmTIes15-ZnlLhLyvWVTaY2RBLFOJ9JRQCZw",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JHAc7bXneHBD2n6ivckIsNDSSC64P4MUtfKf7sA054lxwrk3ldab5Qf5ab7naflH0pxEBxgfhyap4kRh5Fd2IjZlQbEj3rDonfrTcjllOpuQ"
                        },
                        new
                        {
                            Id = new Guid("e8eda6db-3b2e-4e17-9c07-9bde7ba2c5e0"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IOGHbjYmGRjIrgfSPRgGu_3x9spDZTN3KPhFYBzwsQNz1hBCFyvu_AH4f_br0DvzqtCAEhBu7AIhSq1ZPsuPuQ3w8KPMrmzha77hsm-XB9PQ",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6I_qxc-9NE1EMb_WDoCWM05tgLEOlAgKbvdLiicfuUuZvJ9X1_Oh1WYp5a-ivhOm1ayia6KZ1aDdSTImduQxETZd9qeFx1H-TuJlIIrIDWi7w"
                        },
                        new
                        {
                            Id = new Guid("7082c497-df01-4f35-8599-720ffb76a561"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JyMvyAiYplx85xDQ9KRdC-aCkuMqK_WR3q6RFsNXG8ZBjiWy5nyC67qKb98f9s5A3Zn4IXLt8sAVWI5RdUN97DuThJICs_3TredtH4jsCVMg",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LetG3RD08FzbCsQZvj3HONXgIdQuDy0Pks-a43qsbBa98QQ4HtsV-TpTUkF6JZNFiDz4AG55Ycw39dga7MDgFFkHHGZuMb24hOLQsBst12PrhW-zqFpSzAtFfbXvJkkTw"
                        },
                        new
                        {
                            Id = new Guid("8058131f-0cc7-4851-8496-a99a4935c7b4"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6I-AUr3UdEgwvN80Iq8hsuHi0NKr94K3o1xLRVsVNAhsK3oJt0M8Sybuue5qDsAf7P2lAodITC-TlSuKlcTzpGLiF2-qa26XmiOHS3oDfKqAg",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IoxVEsoiWATv_xCXJIMft8p3Gv6kVbYJEN2fK6fZbrk7BD1exJp_MgskKl-4yAlM1ztswB5-tws5UtXkVcIuYqIKDZwRyqF2vuMpv0fjM8qQ"
                        },
                        new
                        {
                            Id = new Guid("0f95cde9-32c2-47f2-a2ba-3a11730ee8c5"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JCwGn9Txj3KiOX52j4A88LVctLlkkNBeAclPZV_T0rbHhDAWjAnfR3NS7x5AxAczdXQN6NsS-o7UnYSDuE5-Ub656DcOxSgZ8iZuLJDmVaOQ",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Lo-_IQpMt5Sx3GDfk4KWchcLUrhxJQ2zrGnok5htYij7Yz1KEEWAKtVrT3-NlT6pV_OxmGh__9qcUimzoK_Rnd_PJgq5omnGccJK6SzZPt-w"
                        },
                        new
                        {
                            Id = new Guid("36c865ea-6c4f-4885-aba6-15fe2e23b375"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JrT3v0qzBpqbA0JPqgR1LdJgD3GUtVU-0IKPKwFTBxcSLVWKWutNRlqRZeMyBjUyzDjwaA6E17vmBbBu5iJD3aZVtF85_BbV-lECi4TAuExA",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6ISluadAM9ZqERTRnJRZHnuyKLqrRoLzBsq9fVGE4uF1lHKJq2Qu8ZT4dKQHySlFJfUhziLZ-jUCzR2EsECejF0TmRiGBsezIs29scndxIs8A"
                        },
                        new
                        {
                            Id = new Guid("e4231c1c-6f07-411f-a742-741bad8ee13d"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JUD5Mkb498xOaHmykzWxEtBYiXOzXKwRfxuTNkJb3weYFs_d8FaM62h4aXk-dyevWFcE3srNCq9s0rdpa2d8fWsKxmN5qcjmybIU_Z3rKyIQ",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IxWJSTQtVBkqftysLaUkM23Gn1Bvvfq0eudsyHyUNlzV8iowLzO4AbvlycyuXvZZl8h2WG_TxMgtFbNX-TmNL4hYiaGJf_gHwuUlwPRvC_2Q"
                        },
                        new
                        {
                            Id = new Guid("ccb4f87d-9766-4a45-97db-35c962a9d704"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JWrFrMZE0RSXIRzXXQhgOGyyo2vKwrbgvHZnsKu5HJYZ6qylM2XSKLuVhR9PATqzUx-p3P9LRtRChdJ-E_PLZiJfKzENHS1_zjz1qvIawbYQ",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JGUpIm328QzMqgA3IYnJ_gq3Efww3grHkNk7N84RmI5qgJCdo4iMXJCYzln9CCzLQUJfO2BUsZe5cGKc0l5eHKmMafF8YCc8eBrEiR9RiAVA"
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Groups");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.JobInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Municipality")
                        .HasColumnType("int");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("TimeInCompany")
                        .HasColumnType("int");

                    b.Property<int>("TypeActivity")
                        .HasColumnType("int");

                    b.Property<int>("TypeJob")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("tbl_Jobs");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d30dcd5-6caa-4c3f-927e-9b74ec3dbd1b"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.View",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a86c6d87-6cfe-4b61-ac8a-2e494cad6e62"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Create",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("10894c85-8e6f-4bf6-b57b-c9c26a88282c"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Edit",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d7120b1a-3638-4816-b3bc-8939f121362d"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Delete",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("58ec21de-f92e-4f5f-ae1b-ee2d3dd06b09"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.View",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("05e6c31a-21cc-43c5-97e5-3cfbe3ceacd6"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Create",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8f99ec0b-0f93-46fb-9ed2-08c3085ec8f2"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Edit",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d0749ed5-ff63-4a62-b7ac-3fb44fb9bf5c"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Delete",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("979da608-7b3f-4d9c-81ef-54f748e7fd21"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.View",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0099af76-2702-4049-af18-faf8562335f2"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Create",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1ded4347-b7ea-4851-8656-7f052f12552f"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Edit",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0d715657-5ae3-408a-829c-dfc61ce36d93"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Delete",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6ec758a1-3fd4-4200-aee0-c1e8853db644"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.View",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("02b23fb6-06c2-4ca9-8a3a-a47acc4f8f3c"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Create",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("96a1f3fc-1a48-4918-898c-a24a1e7b0c5c"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Edit",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("63fcfdbd-418e-43eb-95b3-8803eaccb24f"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Delete",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0cbb8256-0147-4b4f-8240-4505ef3ce2e4"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.View",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bcc3c0c5-d524-428d-867f-5b7e909840e6"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Create",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("150b5467-09f9-474c-b7ce-e179d91458e5"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Edit",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ecfea994-c649-478c-b4b0-72465b6b3910"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Delete",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4c2f1041-4f18-41e8-978a-789d23d857df"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.View",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8344a1e9-8c82-4bc0-b0cb-4549c06b3ee3"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Create",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3daf11fc-3c5c-4a81-af64-ec05338c731b"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Edit",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0fa779b6-694a-40ae-b1be-20101b686ad0"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Delete",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BornDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Buro")
                        .HasColumnType("xml");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dependents")
                        .HasColumnType("int");

                    b.Property<int>("Dwelling")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDateBuroConsult")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Marital_Status")
                        .HasColumnType("int");

                    b.Property<int>("Municipality")
                        .HasColumnType("int");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("Type_Indetification")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("cel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cel2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Persons");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Administrador",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3b56da83-2a7b-4b5d-90d4-6335697f9dc4"),
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Description = "Basico",
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            DisplayName = "Alaver Admin",
                            EmployerCode = 0,
                            IsLocal = true,
                            Mail = "",
                            Password = "AQAAAAEAACcQAAAAEC3lmvKXh86UnRchBeHumOLGcSITdKq+V5doEYUUl3yi4S9qvgd1yftPVRxhcokyTw==",
                            RoleId = new Guid("8e140b84-2336-48a6-8bac-6af0ad2ee616"),
                            TypeUser = 0,
                            UpdatedAt = new DateTime(2021, 11, 18, 13, 31, 55, 0, DateTimeKind.Unspecified),
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Variable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("tbl_Variables");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.ApplicationGroup", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Application", "Application")
                        .WithMany("Groups")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scoreapp.model.database.tables.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.PermissionRole", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scoreapp.model.database.tables.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.User", "ExecutiveAssigned")
                        .WithMany("ExecutiveAssigned")
                        .HasForeignKey("ExecutiveAssignedId");

                    b.HasOne("scoreapp.model.database.tables.User", "OfficialAssignTo")
                        .WithMany("ApplicationsAssigned")
                        .HasForeignKey("OfficialAssignToId");

                    b.HasOne("scoreapp.model.database.tables.Person", "Person")
                        .WithMany("Applications")
                        .HasForeignKey("PersonId");

                    b.HasOne("scoreapp.model.database.tables.CarInfo", "Vehicle")
                        .WithMany("Applications")
                        .HasForeignKey("VehicleId");

                    b.Navigation("ExecutiveAssigned");

                    b.Navigation("OfficialAssignTo");

                    b.Navigation("Person");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.JobInfo", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Person", "Person")
                        .WithMany("Jobs")
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Variable", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Group", "Group")
                        .WithMany("Variables")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.CarInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Group", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Person", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.Navigation("ApplicationsAssigned");

                    b.Navigation("ExecutiveAssigned");
                });
#pragma warning restore 612, 618
        }
    }
}
