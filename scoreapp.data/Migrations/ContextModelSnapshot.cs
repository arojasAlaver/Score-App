// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scoreapp.data;

namespace scoreapp.data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("scoreapp.model.database.pivots.ApplicationGroup", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ApplicationGroup");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.PermissionRole", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRole");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("7604b0ae-cb90-4b6c-b90b-eee8467220d7"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("a1ae4940-0101-421f-b47e-4100f08fefc8"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("7ce75f0f-98fe-486a-9429-5734404b0b05"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("368ec5b8-7d1a-411d-a731-d5cdef785a3c"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("131fe351-5680-49ad-8925-9e50deb52792"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("0bc92952-08eb-4303-baf9-c1f788adfc8e"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("9c2a7799-6cc8-4670-a3ac-bfdd327f4c88"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("a3942513-e2e0-4ca6-a0e3-c02a3f8e0dc8"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("ab5f73a9-7071-4e10-bec3-4be55f72adcf"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("1e5386a7-4ca9-478b-af1e-146234bda2d4"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("849f8b73-eb20-47a9-a40a-4b5301e18bb8"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("e7325fec-1e19-412f-a1be-43f01dbe889b"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("dcf791fa-1552-430a-b282-e7d5e16893bd"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("d12eaaf5-77e5-407e-b890-c8a58f5fd42e"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("0c7659f4-81dc-46a1-9688-e8b6e5faa471"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("e004bdb2-1aa3-43d2-92c6-9e544f144075"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("20be5f0a-7176-4842-be6a-47d0608fd8a7"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("35400278-9d52-461b-ad51-90b99a1f980e"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("cb5e286b-be2c-4c91-8f9b-a9f76135ed6e"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("b05bc5de-dcc8-419f-bbef-20d5ead9b3cf"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("4b69cc89-4463-4715-87db-f7627c377b95"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("7bea32db-152b-49f3-af09-d45548479e79"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("16824188-348f-4113-8ce1-ae252bbeb82f"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        },
                        new
                        {
                            PermissionId = new Guid("9f56915b-45a3-438b-8c33-c759622f43b1"),
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81")
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptCondition")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExecutiveAssignedId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Incomes")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OfficialAssignToId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OtherIncomes")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Terms")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveAssignedId");

                    b.HasIndex("OfficialAssignToId");

                    b.HasIndex("PersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("tbl_Applications");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KeyValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Audits");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.CarInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vehicle_State")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_Vehicles");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00c05a1c-f27d-45a9-adac-734fbfd57f7f"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LMk2_nxN-VIlVnqTJF13XxPB8TnZEjxD9Qoc_-aQoypZ1kMzlwxc5nzOyuYmtf6R1Jc7i-7TaWCJ3_J4Jx5uXj_Dhm7NOTAcNyCSRLPCbtlw",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LESiHIjqoY3iJFoj1H0OFVq3D-X4F0KWLMOHFTbQKwIK1VCEHW2dViVBie6wg_dW62-tMUpYA5Bfs-b2lqqZ3xnEiQc5FODGzTkYjCX89STg"
                        },
                        new
                        {
                            Id = new Guid("83b3898f-fb65-49da-bcd1-ed876419a455"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KfljevfytI-hkDiMkV0nb32RkXcbRWI_52xKdP9akiv97X_yskueXCTYsgdcAsq0Cmb7dUB64OIkymvVBz3-hE1hMJFNBUP78nUbTGRl0IzQ",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JBsdjwMRg2LSZKQuGfOkCCag-rdPjZWL1vR_Tzxf5PNvBO__dZonEcCK71hKJ8E-KCS3Y37nKcVKxCheQT1smd-TC4kNynb0qKlf6N8-WNEQ"
                        },
                        new
                        {
                            Id = new Guid("625f60d7-3476-4c12-a154-f8b4bd8f8705"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LcsCA-e7oafUtkE7BTZq065Mf_LpKii_sXR5NVWDbhCvON_6ULEplTGLx4rb7wdUc3EHw96tAEnQQjTGE3vKXEdQKxeSS7BU4kgtB3fHjzHA",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LaM8X_ki1P1KzKohLS4T-BzRr2IR9gTGZcNSrIe5ft1oXhP9JRAeYiub238BmUNaRyOhD_4wHNcD1bu-wGMxzf4gYW2F6ncMJ-SzcHZ8H0ux37WGmiGLx2vcIBi2-qE8G3i656Xl9K66gcI7aHBMY0"
                        },
                        new
                        {
                            Id = new Guid("c66b989e-fd2a-4c2d-98fb-4a33a975dad2"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JXR9gNF2G1TH8KoDxlVNv0CUGpEQtkjK2_zSZ_P0AJWLWYvMuHpkNu2Ieid6YWQvDYYwecy2gAwyyMCR_IuNqBXOS0j7xqODPVq6VNJtAdJw",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Ix9RiNZBj6OCUitNZS0DFvGLFYSXR0SjhmSth7YGqOsthGJJtnB8VjfaNOGodnJ6Le9sGh0yNgVETKp_Nt4J8decyOrJ3eSDGHaJbbI-pBQdAzLBzCnAGJRv38OktqLwQ"
                        },
                        new
                        {
                            Id = new Guid("cdeae839-ad90-489c-9d71-361689ce67ea"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6I5m5l4JfplZhiaAIUj2cdMEfhLf8FbkdZgHydarOYkXx5v0IcKkcQ1s0d_T3J1_zghRUz39dSxkehxdawCBAHl04qeIIN6WYMadbftI86i3A",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KgjMpBmPZqc2ZPCIr6lehhoEG170NoB3X52xGOSFmLlyDTICFDI5kSzPbajW6QABvqUkbNzJ32_YgU0DNJ_clxxCLNDJYWnwgHWvJKpLAJbg"
                        },
                        new
                        {
                            Id = new Guid("f8b07541-2ed6-48f1-921c-cd5c62ad38e8"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JqUEIL5jXTFOyG5ee3cHAhRts1M0aG3TFmT3uSeTPe53G5EZvv67bhI71aikf_D5La0ol0VXtu-9aU1vzWABp3p0q3LKGBtJXBGPQX1MwR4A",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LAgeu2lY_7etzSMTd5rOMfFAPguv_ztoRuBO2FI3ukGH9-Dw1Yd3dv6xI3SxfzJBPdcyMjRq6AHTH1Mpzlxrt7zRPg1m30DBzZq1SfW4yWEQ"
                        },
                        new
                        {
                            Id = new Guid("33320b96-5d8c-49e1-97c2-cc5173264e19"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IzS2M4XAeh-v8ZZa_5tMbiInNow7r7tlS4tqdaVEFXVjgrTtBVAYLGOCye402OeSa4tboeXlDbMhrCkRtLtVpvDSv8Q1-PcCavVnITEBiLvw",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6K2G-19LtIj3TAJtKMSl5ByVL_udRgJlQN1_b2VhzPScl6JpVpMluDAnMCK50--pCWMAt3oqBe85ztXL6MN6y_CHkk7tTecmVMyCiBBnQq71A"
                        },
                        new
                        {
                            Id = new Guid("c2304986-a40e-4f93-a37e-bf8fdf32ec19"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KlV1uglBxIhuihUeFVyQFRfY4NJ3cuOn_-z7igcxfO8xQaDZhoaYR-8Xz2RZ3gvx0YfXyMhleChrjlkNfMJWeHkClKUyZFRpiMVv-ykc9xmw",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IYoinYE8mZdi2yNYv_nfIvmRXSbjZGMSH7k8u7OeWMEZFuIoBfPTjcBIZoBqAaNaBfXoLZJqe3VKHVf4iXv3IdnJvKayYVDu4_eRaJzCzlBPHskWiYgCGVDoeqPpozRaE"
                        },
                        new
                        {
                            Id = new Guid("e5965aea-ebe7-478b-84da-e72a2741b62b"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Izs0Shy-gtwlwz-P3Jx9tpUVKNYwTuTwHDgXzHVrwXlExjD4nI5wB5imE_qAB1tQbEw6Xru505CEJHgYtY0XJODEVt3HEbtb0x0e73n1rbUA",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Kod9uCUaizvWZH7m1Xbx226jYkMNx1pcGKJrfaJwz5mlvG20uuUzRY69QhuCJE_LkB0kvNy9qSQWbBKfNNM-I46K03u7y40KVlKydj6_pwpw"
                        },
                        new
                        {
                            Id = new Guid("82d10de5-9c41-4dba-aac3-c779859e0660"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LG-1nGaIizQDNdUAHFrSCIKtS-k9QVb-mVJw4CRZnjSreaL7A9XqGWkEP80Yl7ORhKrN_gKeObFVqx0yodMCyuctQVvQXHZpW25khf3dfqJw",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Injo_nJKtsAuujHAqeXRaeu1fBfceTMSS4-Uu36kgF3TkYsLZLiJZJb5gQ7skx-ElWifFYD4o6PojDAw65it-0ihy5YKrrfQcj1wKbO-I7Dg"
                        },
                        new
                        {
                            Id = new Guid("06e05c48-5080-48ec-840e-cc4f84c1193d"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JmO6ZW5u8_0sQZabxM_jx0yHb6LrIozwASDDNLQfWo470Lmzkzf-rtySmsKVikoU1sEawS8tGMzB8JLv9od7pwVXWQxSEcuuFx1ZzJ5KFl7g",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IBXxn-XyvkPqm6gBkCz7Cz_q2AsKFIBGhSl6Gt9hiB6jXa8q-lvWIm98KXkvOPca5iHM2T_OKHKKbf4uyauXvtzYm5bljS4_jZcEHiL0ZXHA"
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Groups");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.JobInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Municipality")
                        .HasColumnType("int");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int?>("TimeInCompany")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("TypeActivity")
                        .HasColumnType("int");

                    b.Property<int>("TypeJob")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("tbl_Jobs");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7604b0ae-cb90-4b6c-b90b-eee8467220d7"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.View",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a1ae4940-0101-421f-b47e-4100f08fefc8"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Create",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7ce75f0f-98fe-486a-9429-5734404b0b05"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Edit",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("368ec5b8-7d1a-411d-a731-d5cdef785a3c"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Delete",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("131fe351-5680-49ad-8925-9e50deb52792"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.View",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0bc92952-08eb-4303-baf9-c1f788adfc8e"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Create",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9c2a7799-6cc8-4670-a3ac-bfdd327f4c88"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Edit",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a3942513-e2e0-4ca6-a0e3-c02a3f8e0dc8"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Delete",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ab5f73a9-7071-4e10-bec3-4be55f72adcf"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.View",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1e5386a7-4ca9-478b-af1e-146234bda2d4"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Create",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("849f8b73-eb20-47a9-a40a-4b5301e18bb8"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Edit",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e7325fec-1e19-412f-a1be-43f01dbe889b"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Delete",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dcf791fa-1552-430a-b282-e7d5e16893bd"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.View",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d12eaaf5-77e5-407e-b890-c8a58f5fd42e"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Create",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0c7659f4-81dc-46a1-9688-e8b6e5faa471"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Edit",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e004bdb2-1aa3-43d2-92c6-9e544f144075"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Delete",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("20be5f0a-7176-4842-be6a-47d0608fd8a7"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.View",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("35400278-9d52-461b-ad51-90b99a1f980e"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Create",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb5e286b-be2c-4c91-8f9b-a9f76135ed6e"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Edit",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b05bc5de-dcc8-419f-bbef-20d5ead9b3cf"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Delete",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4b69cc89-4463-4715-87db-f7627c377b95"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.View",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7bea32db-152b-49f3-af09-d45548479e79"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Create",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("16824188-348f-4113-8ce1-ae252bbeb82f"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Edit",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9f56915b-45a3-438b-8c33-c759622f43b1"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Delete",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BornDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Buro")
                        .HasColumnType("xml");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDateBuroConsult")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Marital_Status")
                        .HasColumnType("int");

                    b.Property<int>("Municipality")
                        .HasColumnType("int");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("Type_Indetification")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("cel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cel2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Persons");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Administrador",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("da83f7b0-1229-460c-85bf-c289bbb6149d"),
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Description = "Basico",
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            DisplayName = "Alaver Admin",
                            EmployerCode = 0,
                            IsLocal = true,
                            Mail = "",
                            Password = "AQAAAAEAACcQAAAAEGbgwG8sr87WQQkdYRWd+L8nHYk4injPbNUctxdUvDZuxduTk94l/KG3UYpJ8HCu2g==",
                            RoleId = new Guid("2e4a34e2-40fa-4506-a46a-766d60e9cb81"),
                            TypeUser = 2,
                            UpdatedAt = new DateTime(2021, 11, 1, 9, 33, 8, 0, DateTimeKind.Unspecified),
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Variable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("tbl_Variables");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.ApplicationGroup", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Application", "Application")
                        .WithMany("Groups")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scoreapp.model.database.tables.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.PermissionRole", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scoreapp.model.database.tables.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.User", "ExecutiveAssigned")
                        .WithMany("ExecutiveAssigned")
                        .HasForeignKey("ExecutiveAssignedId");

                    b.HasOne("scoreapp.model.database.tables.User", "OfficialAssignTo")
                        .WithMany("ApplicationsAssigned")
                        .HasForeignKey("OfficialAssignToId");

                    b.HasOne("scoreapp.model.database.tables.Person", "Person")
                        .WithMany("Applications")
                        .HasForeignKey("PersonId");

                    b.HasOne("scoreapp.model.database.tables.CarInfo", "Vehicle")
                        .WithMany("Applications")
                        .HasForeignKey("VehicleId");

                    b.Navigation("ExecutiveAssigned");

                    b.Navigation("OfficialAssignTo");

                    b.Navigation("Person");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.JobInfo", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Person", "Person")
                        .WithMany("Jobs")
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Variable", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Group", "Group")
                        .WithMany("Variables")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.CarInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Group", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Person", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.Navigation("ApplicationsAssigned");

                    b.Navigation("ExecutiveAssigned");
                });
#pragma warning restore 612, 618
        }
    }
}
