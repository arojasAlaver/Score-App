// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scoreapp.data;

namespace scoreapp.data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211109124058_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("scoreapp.model.database.pivots.ApplicationGroup", b =>
                {
                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ApplicationGroup");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.PermissionRole", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("PermissionRole");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("61b931f3-2c95-4721-b7a8-1943017a2131"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("72cdd7be-5544-4227-9845-b936a5329fe0"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("08f89e69-22a1-416c-bba9-f879a95a0a76"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("54d1b147-ad48-49ca-8f24-a948abd48e06"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("96588204-bb74-4da6-8435-8a68d9c7483b"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("605611e4-e294-40c0-8e10-9508ffc777c3"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("e9255b28-b18a-4ded-b05f-71bafe72bff3"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("663b706a-449f-4a9d-acfe-005e9392e3aa"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("dc83b4f6-dcc7-4ab1-a9f3-e0428e6b93ee"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("e4b6c506-2ff2-407c-8bb6-4243f10bf254"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("3e890718-0077-4b75-aa27-40324a9a4420"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("0b487ca9-257c-473f-ba0f-13dc37a2f8d7"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("a64aa401-7ad4-4147-ba7f-d59262b992dd"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("8bb1e7a6-4f17-4a12-a81c-79a8ae598599"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("c1e6cfec-9590-4953-b31e-387cad717f05"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("600a3c17-7276-488f-961b-12fdff516a0e"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("eb2c0823-1040-4b1b-b930-29919ba76be6"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("16c9d900-0780-4ec5-b4e6-aaad06a5c42e"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("39f78798-bcf0-4b0e-829a-99400348c7ff"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("939bb875-21bb-481f-b55c-86f848244e49"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("f243f0bc-3452-4e3d-847f-6fd790050bb7"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("46e18edf-5afa-4959-b872-3849679e3ba8"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("695a94c6-6b1a-40f0-b9b0-b627f0ee3209"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        },
                        new
                        {
                            PermissionId = new Guid("4830b7b8-3f90-4316-be0c-27f3eed311e3"),
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d")
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptCondition")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AproveAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExecutiveAssignedId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Incomes")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Office")
                        .HasColumnType("int");

                    b.Property<int?>("OfficialAssignToId")
                        .HasColumnType("int");

                    b.Property<decimal?>("OtherIncomes")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Terms")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveAssignedId");

                    b.HasIndex("OfficialAssignToId");

                    b.HasIndex("PersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("tbl_Applications");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KeyValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Audits");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.CarInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Vehicle_State")
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("tbl_Vehicles");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Config", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Setting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("877ac9af-0c4f-408b-bb69-9409f440f3aa"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6J3CVrTsWrWo82AHNJgUw3R-O3-G5U98z6rajhJ-ekcZtSyFU2s7CN4O5uYMKKUfD1NgQI6Fvh2mF9IaiaA-y-uvLdCRPeoXPVP6wDoZR6t_Q",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6J67HD0GY5C8B340HwjVPPV_7Cg8XEog7S2ZVz7lygwx-5sO65VaSqoSc9EvVdJFtl9_iVtP2Uxhki4GJ2ln-EOdEJ6hcM0XFjJQHxVRLbLfw"
                        },
                        new
                        {
                            Id = new Guid("6ad8a77e-f6dc-4aff-aa90-cd82af44f260"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IXhO-AvNqPxaPG-QpN4liOkjC67ZfZg4JkdB1okJBdA4ljhr5dqy6ewpfo_cUq3M6X8Xlry2TtoNNQY-lSCcINqtTJT2jvVuQhPzmFQH0epQ",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IFVmaGsPtUNGo3BVnWDkvx2h5bDG5Eq9m_xkV8BDi8GjTtbtqqkqM1LhrlLZvLItvn_OssnSBVZTYZUeYHUszVca7eImTi4hDQpZyUn-kmuA"
                        },
                        new
                        {
                            Id = new Guid("4a23f822-ed7b-4816-9757-caa866f5f35c"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IrkKftn8a4sBFhlk8FQTxzD8r7uyqlI-Hr-X88Hpn2JC3XNFmaISFr9gRO3py4GpLs3Q0Am4df88SwkOu3QegBlNIQKTmO5kHSTuznWcV27A",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6J5LOzxbXUUmOnh96usGtbTQiEz6uGl0k-GNjqwlkx9p2IyUl6evSQZbozF7WD6wUp-JlQ0qkIp0DtjdsT0rOTZaybMjH2XOmzJcQNO9DUfgVyvT1gB2NL6GYHHITjUG1sOduESlA3Gu6fVNfGG90FR"
                        },
                        new
                        {
                            Id = new Guid("2c3b3b21-0981-4889-96a7-01ec9a9cf833"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6I3i76QQhuabGhYQMYSsFANlAtpYin5_he5SIg6MDyLu20L3sMbcuHs9yTILwMiftM68ZTOrCdyEaUc7Z43idyUoHBaqWb951A0Sp5eh9tIaQ",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6J9rg2zr63BC4FeaCpqvNQhG8c04yUe4YR3Zyr93MGgvEAMntLaQvjTk8Wz7j2XDkGSD0Vg474adomh_Hv5PNiOJ3sN8cFbadARIyXH_E8VsPSW99E0liXxdN83QxDfE6E"
                        },
                        new
                        {
                            Id = new Guid("c678979c-a7c2-4c39-b712-65511a965c4c"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LB2U1DVHuQP753nmSNPyq24gWZMZwVMzpLJ-qt6EUg0DKFdDSe8JlZo5cN0B7F84r6QmGUOXe0Or0cWHcPlCzKQt05qb5TY_5a-fe-2eSgHw",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LLeKijkP5QDlCY6KpFKjJzEtNacQeoS4QYwlD912d5Sfl4Pvf-zWIk0XMd6yXQHQeasuk-27CaAeB7zyftmTajWpUgW8Zs6opi5zgaXsGWIg"
                        },
                        new
                        {
                            Id = new Guid("ab934932-cc29-43b4-9482-c1046235e374"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6Knq-qDy2QqDMKvynlyBv_88nBVhWuRuO_obk52vr2sfOOGU6L_pwjgzOZfBiiB5N6Fyal3xROpeKWmL9RRTEWxZLiGgRDh5KwVKrD1l3UcWQ",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JP_TaOlaAKxo26IQtrgO0Tw1znbw1zMNkPOCs5FRxOmGWSruYWuSLG1FEOKyzt2iamMYN2NV7BBu5bySI3kqgnwUmnWOEyKXTvnaa4v5FQ-Q"
                        },
                        new
                        {
                            Id = new Guid("d18e163d-6e62-44b8-bf57-a375dfa0279e"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JHa72ZSl95tz31-yoKglZ9g-CF6l63-CnNU8Go3ADbRAZN6ArEuEf2uuOnSggPDE6TcApC0_0orTf4ePvxWZpacICybHaUDTaKQYKVz5e-zA",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KueyB0FKyPB5B0rxPs0x_JpgWryk5rtn5wcf70EtsN9TI8vWLg40DzpB5GE2YN_E752ldpyagVIGem56GMs9byIaEsJlKdXW2NHtZHscUHOw"
                        },
                        new
                        {
                            Id = new Guid("96879612-0b86-42c1-be9f-6f0661a31766"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JwBMXRhd5eeL9jIpSbQ7XL5_Q6Zp-Zck1u9D2ARYxhTSOR-Dz-RuyOAdox2h2QE0CeVjhtQVGcChDmwnhWmM2e-mTMJ-a5EX9AVyjlsN2JxA",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IiYbvT7hqHtYLuafGZlSR7fPTPZsfyB31bGjLIahUEAXfuIgrRtX7MV2y1SYnqOJsmH1TAJe5pw09Wu7PTuVu6ayQVpcJoNchfEVa45fL-UpMERrmpn-h3W_pkYiQ1aPc"
                        },
                        new
                        {
                            Id = new Guid("a960a5df-ef8d-4364-a2a4-971610b2c5ab"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6JwKV-o0E_r5NlpQ6CJI4DH-z_9tFIozzXbWERSaID1oPCj1krYyugIcd0X26J92iors9nqsITwcpgT5TFnK5L5wQ9hH267jvsXZW1HD42eqQ",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IWeTCwwgscrBRP5sf0QnYu8YsAbKvTRYBT41W-c_9vt73wtl4Y5GDn2e4jMQBIapIKBxNJaGbsB-ZPY3FnTqta2HLxhF7fSpVA3IIcPNYoPQ"
                        },
                        new
                        {
                            Id = new Guid("2ecfaab4-763b-47e7-9873-eea52975c0c4"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LJdw5xeUSjF8BoGleV4CbZzgwgD1H7Q4PEbmoUBASz0am9ewBQQQR-kJnZnNELVE_OVPi_5JdPNfa49ZXRO3NYbHpUQdSe_RTfAQgOEaHt1g",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IrMRtmVeXLq-5sdysYOT6eCPXrhioj9Pyics4QCcjKHI1KDdi4fTbcESEudCzh6Ho5zAlRK3Cqg_HByOimSy9tkh97y8idPlA_H-PwGeUqOg"
                        },
                        new
                        {
                            Id = new Guid("3beb5cc7-17b7-4263-bc37-fa8824c12322"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6KghKDsfkccqV_rws2dzqlfLMA2FvTqvOScJjmNYUJnWSUunnZDcVzjVlcJakgFwF_Hw5-1PUVMCxCVqWVmB7iwHkny2AxTA0a8nNf27JddEA",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6LMeIfUtZYdVQrzyevxmw3A4ftME53RKBup7faZnMGRMGGr66xtah3ncvayfy7Y4coiXufJ7TmNeRrm-yk1AjWLLPdjtdystySemJCceWC3YA"
                        },
                        new
                        {
                            Id = new Guid("37c20aad-a46e-4e38-b12b-09ce99eb855c"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Setting = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IbvAcdxlC5H_ICfOrErxnywJuHhIDsuF4ilWU02vCzplmD4EVrsWmh46iZ5Ez5pGNwDEczhhTLmtccEzKcVxq4yYLuE9h-u8MWQKPfJvJGZA",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Value = "CfDJ8K8zXOoJ6PVKg0EdUGTqX6IQKOloMVnrQ5pFfqLAfRN6uJlgKyw0TJXLTg5D7VzvEPzbxwUW93mVZaBtJJz-uO_pjBr0xr4AvYtRq76KHLmzksL_TOAblTakNfQ6R6JGQw"
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Groups");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.JobInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Municipality")
                        .HasColumnType("int");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("TimeInCompany")
                        .HasColumnType("int");

                    b.Property<int>("TypeActivity")
                        .HasColumnType("int");

                    b.Property<int>("TypeJob")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("tbl_Jobs");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Permissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61b931f3-2c95-4721-b7a8-1943017a2131"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.View",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("72cdd7be-5544-4227-9845-b936a5329fe0"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Create",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("08f89e69-22a1-416c-bba9-f879a95a0a76"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Edit",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("54d1b147-ad48-49ca-8f24-a948abd48e06"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Config.Delete",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("96588204-bb74-4da6-8435-8a68d9c7483b"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.View",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("605611e4-e294-40c0-8e10-9508ffc777c3"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Create",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e9255b28-b18a-4ded-b05f-71bafe72bff3"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Edit",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("663b706a-449f-4a9d-acfe-005e9392e3aa"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.User.Delete",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dc83b4f6-dcc7-4ab1-a9f3-e0428e6b93ee"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.View",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e4b6c506-2ff2-407c-8bb6-4243f10bf254"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Create",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3e890718-0077-4b75-aa27-40324a9a4420"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Edit",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0b487ca9-257c-473f-ba0f-13dc37a2f8d7"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Role.Delete",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a64aa401-7ad4-4147-ba7f-d59262b992dd"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.View",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8bb1e7a6-4f17-4a12-a81c-79a8ae598599"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Create",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c1e6cfec-9590-4953-b31e-387cad717f05"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Edit",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("600a3c17-7276-488f-961b-12fdff516a0e"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Permission.Delete",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eb2c0823-1040-4b1b-b930-29919ba76be6"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.View",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("16c9d900-0780-4ec5-b4e6-aaad06a5c42e"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Create",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("39f78798-bcf0-4b0e-829a-99400348c7ff"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Edit",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("939bb875-21bb-481f-b55c-86f848244e49"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.Applications.Delete",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f243f0bc-3452-4e3d-847f-6fd790050bb7"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.View",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("46e18edf-5afa-4959-b872-3849679e3ba8"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Create",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("695a94c6-6b1a-40f0-b9b0-b627f0ee3209"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Edit",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4830b7b8-3f90-4316-be0c-27f3eed311e3"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Permission.GroupVariable.Delete",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Person", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BornDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Buro")
                        .HasColumnType("xml");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDateBuroConsult")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Marital_Status")
                        .HasColumnType("int");

                    b.Property<int>("Municipality")
                        .HasColumnType("int");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("Type_Indetification")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("cel1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cel2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Persons");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("963e229d-a461-422c-931f-b364f70dab0d"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Administrador",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5c3b4a97-f3cb-4cc4-ad9e-87a144cbed18"),
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Description = "Basico",
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            DisplayName = "Alaver Admin",
                            EmployerCode = 0,
                            IsLocal = true,
                            Mail = "",
                            Password = "AQAAAAEAACcQAAAAEDdhb0xCdqgDnzNTZTZrEfuK9ojTKqCbQh77/lwB/QWoxSQQ3s+nMZSXTcyPO53tYQ==",
                            RoleId = new Guid("963e229d-a461-422c-931f-b364f70dab0d"),
                            TypeUser = 0,
                            UpdatedAt = new DateTime(2021, 11, 9, 8, 40, 58, 0, DateTimeKind.Unspecified),
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Variable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("tbl_Variables");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.ApplicationGroup", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Application", "Application")
                        .WithMany("Groups")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scoreapp.model.database.tables.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("scoreapp.model.database.pivots.PermissionRole", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Permission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("scoreapp.model.database.tables.Role", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.User", "ExecutiveAssigned")
                        .WithMany("ExecutiveAssigned")
                        .HasForeignKey("ExecutiveAssignedId");

                    b.HasOne("scoreapp.model.database.tables.User", "OfficialAssignTo")
                        .WithMany("ApplicationsAssigned")
                        .HasForeignKey("OfficialAssignToId");

                    b.HasOne("scoreapp.model.database.tables.Person", "Person")
                        .WithMany("Applications")
                        .HasForeignKey("PersonId");

                    b.HasOne("scoreapp.model.database.tables.CarInfo", "Vehicle")
                        .WithMany("Applications")
                        .HasForeignKey("VehicleId");

                    b.Navigation("ExecutiveAssigned");

                    b.Navigation("OfficialAssignTo");

                    b.Navigation("Person");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.JobInfo", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Person", "Person")
                        .WithMany("Jobs")
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Variable", b =>
                {
                    b.HasOne("scoreapp.model.database.tables.Group", "Group")
                        .WithMany("Variables")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Application", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.CarInfo", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Group", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Permission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Person", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.Role", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("scoreapp.model.database.tables.User", b =>
                {
                    b.Navigation("ApplicationsAssigned");

                    b.Navigation("ExecutiveAssigned");
                });
#pragma warning restore 612, 618
        }
    }
}
